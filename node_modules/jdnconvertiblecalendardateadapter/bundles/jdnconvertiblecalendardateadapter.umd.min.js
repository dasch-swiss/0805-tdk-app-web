!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("@angular/material"),require("jdnconvertiblecalendar")):"function"==typeof define&&define.amd?define("jdnconvertiblecalendardateadapter",["exports","@angular/core","@angular/material","jdnconvertiblecalendar"],r):r(e.jdnconvertiblecalendardateadapter={},e.ng.core,e.ng.material,e.jdnconvertiblecalendar)}(this,function(e,t,r,i){"use strict";var o=function(e,r){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])})(e,r)};var a=function(r){function n(){var e=null!==r&&r.apply(this,arguments)||this;return e._activeCalendarFormat="Gregorian",e}return function a(e,r){function t(){this.constructor=e}o(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}(n,r),Object.defineProperty(n.prototype,"activeCalendarFormat",{get:function(){return this._activeCalendarFormat},enumerable:!0,configurable:!0}),n.addLeadingZeroToNumber=function(e,r){var t=r-String(e).length;if(0<t){for(var a="",n=0;n<t;n++)a+="0";return""+a+e}return String(e)},n.prototype.convertCalendarFormat=function(e,r){var t=this.clone(e);switch(r){case"Gregorian":return this._activeCalendarFormat="Gregorian",t.convertCalendar("Gregorian");case"Julian":return this._activeCalendarFormat="Julian",t.convertCalendar("Julian");default:return t}},n.prototype.getYear=function(e){return e.toCalendarPeriod().periodStart.year},n.prototype.getMonth=function(e){return e.toCalendarPeriod().periodStart.month-1},n.prototype.getDate=function(e){return e.toCalendarPeriod().periodStart.day},n.prototype.getDayOfWeek=function(e){var r=e.toCalendarPeriod().periodStart.dayOfWeek;if(r!==undefined)return r;throw new Error("day of week is not set although it should be")},n.prototype.getMonthNames=function(e){return["Jan","Feb","Mar","Apr","May","June","July","Aug","Sept","Oct","Nov","Dec"]},n.prototype.getDateNames=function(){for(var e=[],r=1;r<=31;r++)e.push(String(r));return e},n.prototype.getDayOfWeekNames=function(e){return["Sun","Mon","Tue","Wed","Thur","Fri","Sat"]},n.prototype.getYearName=function(e){return String(e.toCalendarPeriod().periodStart.year)},n.prototype.getFirstDayOfWeek=function(){return 0},n.prototype.getNumDaysInMonth=function(e){var r=e.toCalendarPeriod();return e.daysInMonth(r.periodStart)},n.prototype.clone=function(e){var r=e.toJDNPeriod();switch(this._activeCalendarFormat){case"Gregorian":return new i.GregorianCalendarDate(r);case"Julian":return new i.JulianCalendarDate(r)}},n.prototype.createCalendarDate=function(e,r,t,a){var n=new i.CalendarDate(e,r+1,t);switch(a){case"Gregorian":return new i.GregorianCalendarDate(new i.CalendarPeriod(n,n));case"Julian":return new i.JulianCalendarDate(new i.CalendarPeriod(n,n))}},n.prototype.createDate=function(e,r,t){return this.createCalendarDate(e,r,t,this._activeCalendarFormat)},n.prototype.today=function(){var e=new Date,r=e.getFullYear(),t=e.getMonth(),a=e.getDate(),n=new i.CalendarDate(r,t+1,a),o=new i.GregorianCalendarDate(new i.CalendarPeriod(n,n));return this.convertCalendarFormat(o,this._activeCalendarFormat)},n.prototype.parse=function(e,r){var t;if(r===undefined||"string"!=typeof r||-1===n.parsableDateFormats.indexOf(r))return console.log("Error: unknown parseFormat "+r),null;switch(r){case n.DD_MM_YYYY:var a=n.dateFormatRegexes[r].exec(e);if(null===a)return console.log("Error: parsing of date string failed: "+e),null;t=this.createDate(parseInt(a[3]),parseInt(a[2])-1,parseInt(a[1]));break;default:return console.log("Error: supported parsable format was not handled correctly: "+r),null}return t},n.prototype.format=function(e,r){var t="";if(r!==undefined&&"string"==typeof r&&-1!==n.displayDateFormats.lastIndexOf(r)){var a=e.toCalendarPeriod();switch(r){case n.DD_MM_YYYY:t=n.addLeadingZeroToNumber(a.periodStart.day,2)+"-"+n.addLeadingZeroToNumber(a.periodStart.month,2)+"-"+n.addLeadingZeroToNumber(a.periodStart.year,4);break;case n.MM_YYYY:t=n.addLeadingZeroToNumber(a.periodStart.month,2)+"-"+n.addLeadingZeroToNumber(a.periodStart.year,4);break;default:console.log("Error: supported display format was not handled correctly: "+r)}}else console.log("Error: unknown displayFormat "+r);return t},n.prototype.addCalendarYears=function(e,r){var t=this.clone(e);return t.transposePeriodByYear(r),t},n.prototype.addCalendarMonths=function(e,r){var t=this.clone(e);return t.transposePeriodByMonth(r),t},n.prototype.addCalendarDays=function(e,r){var t=this.clone(e);return t.transposePeriodByDay(r),t},n.prototype.toIso8601=function(e){var r=e.convertCalendar("Gregorian").toCalendarPeriod();return console.log("to iso"),n.addLeadingZeroToNumber(r.periodStart.year,4)+"-"+n.addLeadingZeroToNumber(r.periodStart.month,2)+"-"+n.addLeadingZeroToNumber(r.periodStart.day,2)},n.prototype.isDateInstance=function(e){return e instanceof i.JDNConvertibleCalendar},n.prototype.isValid=function(e){return!0},n.prototype.invalid=function(){return this.today()},n.displayDateFormats=[n.DD_MM_YYYY="DD-MM-YYYY",n.MM_YYYY="MM-YYYY"],n.parsableDateFormats=[n.DD_MM_YYYY],n.dateFormatRegexes={"DD-MM-YYYY":new RegExp("^(\\d?\\d)-(\\d?\\d)-(\\d{4})")},n.decorators=[{type:t.Injectable}],n}(r.DateAdapter),n={parse:{dateInput:"DD-MM-YYYY"},display:{dateInput:"DD-MM-YYYY",monthYearLabel:"MM-YYYY",dateA11yLabel:"DD-MM-YYYY",monthYearA11yLabel:"MM-YYYY"}},d=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{providers:[{provide:r.DateAdapter,useClass:a,deps:[r.MAT_DATE_LOCALE]}]}]}],e}(),u=n,l=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[d],providers:[{provide:r.MAT_DATE_FORMATS,useValue:u}]}]}],e}();e.JDNConvertibleCalendarDateAdapterModule=d,e.MatJDNConvertibleCalendarDateAdapterModule=l,e.JDNConvertibleCalendarDateAdapter=a,e.Éµa=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=jdnconvertiblecalendardateadapter.umd.min.js.map