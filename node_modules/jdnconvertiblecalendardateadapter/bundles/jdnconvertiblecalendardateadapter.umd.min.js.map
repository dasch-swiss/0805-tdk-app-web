{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://jdnconvertiblecalendardateadapter/lib/jdnconvertible-calendar-date-adapter.ts","ng://jdnconvertiblecalendardateadapter/lib/jdnconvertible-calendar-date-formats.ts","ng://jdnconvertiblecalendardateadapter/lib/jdnconvertible-calendar-date-adapter.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","JDNConvertibleCalendarDateAdapter","_this","_super","apply","this","arguments","_activeCalendarFormat","__extends","__","constructor","prototype","create","tslib_1.__extends","defineProperty","addLeadingZeroToNumber","num","digits","missingDigits","String","length","leadingZeros","i","convertCalendarFormat","date","format","dateMod","clone","convertCalendar","getYear","toCalendarPeriod","periodStart","year","getMonth","month","getDate","day","getDayOfWeek","dayOfWeek","undefined","Error","getMonthNames","style","getDateNames","dateNames","push","getDayOfWeekNames","getYearName","getFirstDayOfWeek","getNumDaysInMonth","calendarPeriod","daysInMonth","jdnPeriod","toJDNPeriod","GregorianCalendarDate","JulianCalendarDate","createCalendarDate","calendar","calDate","CalendarDate","CalendarPeriod","createDate","today","Date","getFullYear","dateGregorian","parse","value","parseFormat","parsableDateFormats","indexOf","console","log","DD_MM_YYYY","parsed","dateFormatRegexes","exec","parseInt","displayFormat","dateString","displayDateFormats","lastIndexOf","MM_YYYY","addCalendarYears","years","transposePeriodByYear","addCalendarMonths","months","transposePeriodByMonth","addCalendarDays","days","transposePeriodByDay","toIso8601","gregorianCalPeriod","isDateInstance","obj","JDNConvertibleCalendar","isValid","invalid","DD-MM-YYYY","RegExp","Injectable","DateAdapter","MAT_JDN_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","JDNConvertibleCalendarDateAdapterModule","NgModule","args","providers","provide","useClass","deps","MAT_DATE_LOCALE","MatJDNConvertibleCalendarDateAdapterModule","imports","MAT_DATE_FORMATS","useValue","Éµ0"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright ÃÂ© 2017 Lukas Rosenthaler, Benjamin Geer, Ivan Subotic,\n * Tobias Schweizer, AndrÃÂ© Kilchenmann, and Sepideh Alassi.\n *\n * This file is part of JDNConvertibleCalendarDateAdapter.\n *\n * JDNConvertibleCalendarDateAdapter is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * JDNConvertibleCalendarDateAdapter is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public\n * License along with JDNConvertibleCalendarDateAdapter.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {Injectable} from '@angular/core';\nimport {DateAdapter} from '@angular/material';\nimport {\n  CalendarDate,\n  CalendarPeriod,\n  GregorianCalendarDate,\n  JDNConvertibleCalendar,\n  JDNConvertibleConversionModule,\n  JDNPeriod,\n  JulianCalendarDate\n} from 'jdnconvertiblecalendar';\n\n\n@Injectable()\n/**\n * Implements `DateAdapter` for `JDNConvertibleCalendar`.\n *\n * `JDNConvertibleCalendar` supports periods (dates with different precisions), but here only exact days are supported for now.\n */\nexport class JDNConvertibleCalendarDateAdapter extends DateAdapter<JDNConvertibleCalendar> {\n\n  private static readonly DD_MM_YYYY = 'DD-MM-YYYY';\n\n  private static readonly MM_YYYY = 'MM-YYYY';\n\n  private static readonly displayDateFormats = [JDNConvertibleCalendarDateAdapter.DD_MM_YYYY, JDNConvertibleCalendarDateAdapter.MM_YYYY];\n\n  private static readonly parsableDateFormats = [JDNConvertibleCalendarDateAdapter.DD_MM_YYYY];\n\n  private static readonly dateFormatRegexes = {\n    'DD-MM-YYYY': new RegExp('^(\\\\d?\\\\d)-(\\\\d?\\\\d)-(\\\\d{4})')\n  };\n\n  // the currently active calendar format\n  private _activeCalendarFormat = 'Gregorian';\n\n  get activeCalendarFormat() {\n    return this._activeCalendarFormat;\n  }\n\n  /**\n   * Adds leading zeros to a given number and returns the resulting string.\n   *\n   * @param num the given number.\n   * @param digits the number of expected digits.\n   * @returns string containing leading zeros.\n   */\n  private static addLeadingZeroToNumber(num: number, digits: number): string {\n\n    const missingDigits = digits - String(num).length;\n\n    if (missingDigits > 0) {\n      let leadingZeros = '';\n      for (let i = 0; i < missingDigits; i++) {\n        leadingZeros += '0';\n      }\n\n      return `${leadingZeros}${num}`;\n\n    } else {\n      return String(num);\n    }\n\n  }\n\n  /**\n   * Converts the given date to the indicated calendar format.\n   *\n   * @param date the date to be converted.\n   * @param format the calendar format to convert to.\n   * @returns converted date.\n   */\n  convertCalendarFormat(date: JDNConvertibleCalendar, format: string): JDNConvertibleCalendar {\n\n    // another instance has to be returned, otherwise \"activeDate\" set method is not triggered for MatYearView\n\n    const dateMod = this.clone(date);\n\n    switch (format) {\n      case 'Gregorian':\n        this._activeCalendarFormat = 'Gregorian';\n        return dateMod.convertCalendar('Gregorian');\n\n      case 'Julian':\n        this._activeCalendarFormat = 'Julian';\n        return dateMod.convertCalendar('Julian');\n\n      default:\n        // invalid format\n        return dateMod;\n    }\n  }\n\n  getYear(date: JDNConvertibleCalendar): number {\n    return date.toCalendarPeriod().periodStart.year;\n  }\n\n  getMonth(date: JDNConvertibleCalendar): number {\n    // return 0 index based month\n    return date.toCalendarPeriod().periodStart.month - 1;\n  }\n\n  getDate(date: JDNConvertibleCalendar): number {\n    return date.toCalendarPeriod().periodStart.day;\n  }\n\n  getDayOfWeek(date: JDNConvertibleCalendar): number {\n\n    // dayOfWeek is an optional class member, but always set when returned by this method\n    const dayOfWeek: number | undefined = date.toCalendarPeriod().periodStart.dayOfWeek;\n\n    if (dayOfWeek !== undefined) {\n      return dayOfWeek;\n    } else {\n      throw new Error('day of week is not set although it should be');\n    }\n\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // TODO: implement this properly, taking calendar format and locale into account\n    return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  }\n\n  getDateNames(): string[] {\n    // TODO: implement this properly, taking calendar format and locale into account\n    const dateNames: string[] = [];\n    for (let i = 1; i <= 31; i++) {\n      dateNames.push(String(i));\n    }\n\n    return dateNames;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow') {\n    // TODO: implement this properly, taking calendar format and locale into account\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n  }\n\n  getYearName(date: JDNConvertibleCalendar): string {\n    return String(date.toCalendarPeriod().periodStart.year);\n  }\n\n  getFirstDayOfWeek(): number {\n    // TODO: implement this properly, taking calendar format into account\n    return 0;\n  }\n\n  getNumDaysInMonth(date: JDNConvertibleCalendar): number {\n    const calendarPeriod = date.toCalendarPeriod();\n\n    return date.daysInMonth(calendarPeriod.periodStart);\n  }\n\n  clone(date: JDNConvertibleCalendar): JDNConvertibleCalendar {\n\n    const jdnPeriod = date.toJDNPeriod();\n\n    switch (this._activeCalendarFormat) {\n      case 'Gregorian':\n        return new GregorianCalendarDate(jdnPeriod);\n\n      case 'Julian':\n        return new JulianCalendarDate(jdnPeriod);\n    }\n\n  }\n\n  /**\n   * Creates a date in the specified calendar format.\n   *\n   * @param year the date's year.\n   * @param month the date's month (0-based index).\n   * @param date the date's day.\n   * @param calendar the calendar format to be used.\n   * @returns a date in the specified calendar format.\n   */\n  private createCalendarDate(year: number, month: number, date: number, calendar: string): JDNConvertibleCalendar {\n    // month param is 0 indexed, but we use 1 based index for months\n    const calDate = new CalendarDate(year, month + 1, date);\n\n    switch (calendar) {\n      case 'Gregorian':\n        return new GregorianCalendarDate(new CalendarPeriod(calDate, calDate));\n\n      case 'Julian':\n        return new JulianCalendarDate(new CalendarPeriod(calDate, calDate));\n    }\n  }\n\n  createDate(year: number, month: number, date: number): JDNConvertibleCalendar {\n\n    // create a date in the active calendar format\n    return this.createCalendarDate(year, month, date, this._activeCalendarFormat);\n\n  }\n\n  today(): JDNConvertibleCalendar {\n\n    // get today's date from the native JS Date object\n    const today: Date = new Date();\n\n    const year = today.getFullYear();\n\n    // 0 based month\n    const month = today.getMonth();\n\n    // day of month, 1 based index\n    const day = today.getDate();\n\n    // create a Gregorian calendar date from the native JS object\n    // month used a 1 based index\n    const calDate = new CalendarDate(year, month + 1, day);\n\n    const dateGregorian = new GregorianCalendarDate(new CalendarPeriod(calDate, calDate));\n\n    // convert the date to the active calendar format\n    const date: JDNConvertibleCalendar = this.convertCalendarFormat(dateGregorian, this._activeCalendarFormat);\n\n    return date;\n\n  }\n\n  parse(value: any, parseFormat: any): JDNConvertibleCalendar | null {\n\n    let date;\n    if (parseFormat !== undefined && typeof parseFormat === 'string' && JDNConvertibleCalendarDateAdapter.parsableDateFormats.indexOf(parseFormat) !== -1) {\n\n      switch (parseFormat) {\n        case JDNConvertibleCalendarDateAdapter.DD_MM_YYYY: {\n\n          const dateStringRegex = JDNConvertibleCalendarDateAdapter.dateFormatRegexes[parseFormat];\n\n          const parsed: Array<any> | null = dateStringRegex.exec(value);\n\n          if (parsed !== null) {\n\n            // index 0 is the whole match\n\n            // month index must be 0 based\n            date = this.createDate(parseInt(parsed[3]), parseInt(parsed[2]) - 1, parseInt(parsed[1]));\n            break;\n\n          } else {\n            console.log(`Error: parsing of date string failed: ${value}`);\n            return null;\n          }\n        }\n        default: {\n          console.log(`Error: supported parsable format was not handled correctly: ${parseFormat}`);\n          return null;\n        }\n      }\n\n\n    } else {\n      console.log(`Error: unknown parseFormat ${parseFormat}`);\n      return null;\n    }\n\n    return date;\n  }\n\n  format(date: JDNConvertibleCalendar, displayFormat: any): string {\n    let dateString = '';\n    if (displayFormat !== undefined && typeof displayFormat === 'string' && JDNConvertibleCalendarDateAdapter.displayDateFormats.lastIndexOf(displayFormat) !== -1) {\n\n      const calendarPeriod = date.toCalendarPeriod();\n\n      switch (displayFormat) {\n\n        case JDNConvertibleCalendarDateAdapter.DD_MM_YYYY: {\n\n          dateString =\n            `${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(calendarPeriod.periodStart.day, 2)}-${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(calendarPeriod.periodStart.month, 2)}-${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(calendarPeriod.periodStart.year, 4)}`;\n          break;\n\n        }\n\n        case JDNConvertibleCalendarDateAdapter.MM_YYYY: {\n          dateString = `${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(calendarPeriod.periodStart.month, 2)}-${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(calendarPeriod.periodStart.year, 4)}`;\n          break;\n        }\n\n        default: {\n          console.log(`Error: supported display format was not handled correctly: ${displayFormat}`);\n        }\n\n      }\n\n    } else {\n      console.log(`Error: unknown displayFormat ${displayFormat}`);\n    }\n\n    return dateString;\n  }\n\n  addCalendarYears(date: JDNConvertibleCalendar, years: number): JDNConvertibleCalendar {\n\n    // another instance has to be returned, otherwise \"activeDate\" set method is not triggered for MatYearView\n\n    const dateMod = this.clone(date);\n\n    dateMod.transposePeriodByYear(years);\n\n    return dateMod;\n\n  }\n\n  addCalendarMonths(date: JDNConvertibleCalendar, months: number): JDNConvertibleCalendar {\n\n    // another instance has to be returned, otherwise \"activeDate\" set method is not triggered for MatMonthView\n\n    const dateMod = this.clone(date);\n\n    dateMod.transposePeriodByMonth(months);\n\n    return dateMod;\n  }\n\n  addCalendarDays(date: JDNConvertibleCalendar, days: number): JDNConvertibleCalendar {\n\n    // another instance has to be returned, otherwise events do not work correctly\n\n    const dateMod = this.clone(date);\n\n    dateMod.transposePeriodByDay(days);\n\n    return dateMod;\n  }\n\n  toIso8601(date: JDNConvertibleCalendar) {\n\n    // use Gregorian\n    const gregorianCal = date.convertCalendar('Gregorian');\n\n    const gregorianCalPeriod = gregorianCal.toCalendarPeriod();\n\n    console.log('to iso');\n\n    return `${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(gregorianCalPeriod.periodStart.year, 4)}-${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(gregorianCalPeriod.periodStart.month, 2)}-${JDNConvertibleCalendarDateAdapter.addLeadingZeroToNumber(gregorianCalPeriod.periodStart.day, 2)}`;\n\n  }\n\n\n  isDateInstance(obj: any): boolean {\n    return (obj instanceof JDNConvertibleCalendar);\n  }\n\n  isValid(date: JDNConvertibleCalendar): boolean {\n    // TODO: implement this properly\n\n    return true;\n  }\n\n  invalid(): JDNConvertibleCalendar {\n    // TODO: create an invalid instance? For testing?\n\n    return this.today();\n  }\n\n\n}\n","import {MatDateFormats} from '@angular/material';\n\n\nexport const MAT_JDN_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD-MM-YYYY'\n    },\n    display: {\n        dateInput: 'DD-MM-YYYY',\n        monthYearLabel: 'MM-YYYY',\n        dateA11yLabel: 'DD-MM-YYYY',\n        monthYearA11yLabel: 'MM-YYYY'\n    }\n};","import {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material';\nimport {JDNConvertibleCalendarDateAdapter} from './jdnconvertible-calendar-date-adapter';\nimport {MAT_JDN_DATE_FORMATS} from './jdnconvertible-calendar-date-formats';\n\n\n@NgModule({\n  providers: [\n    {provide: DateAdapter, useClass: JDNConvertibleCalendarDateAdapter, deps: [MAT_DATE_LOCALE]}\n  ]\n})\nexport class JDNConvertibleCalendarDateAdapterModule {\n}\n\n@NgModule({\n  imports: [JDNConvertibleCalendarDateAdapterModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_JDN_DATE_FORMATS}],\n})\nexport class MatJDNConvertibleCalendarDateAdapterModule {\n}\n\nexport {JDNConvertibleCalendarDateAdapter} from './jdnconvertible-calendar-date-adapter';\n\n"]}