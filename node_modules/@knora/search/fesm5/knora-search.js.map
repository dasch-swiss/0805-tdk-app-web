{"version":3,"file":"knora-search.js.map","sources":["ng://@knora/search/lib/search.component.ts","ng://@knora/search/lib/search-panel/search-panel.component.ts","ng://@knora/search/lib/fulltext-search/fulltext-search.component.ts","ng://@knora/search/lib/extended-search/select-resource-class/select-resource-class.component.ts","ng://@knora/search/lib/extended-search/extended-search.component.ts","ng://@knora/search/lib/extended-search/select-ontology/select-ontology.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/specify-property-value.component.ts","ng://@knora/search/lib/extended-search/select-property/select-property.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/boolean-value/boolean-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/date-value/date-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/decimal-value/decimal-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/integer-value/integer-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/link-value/link-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/text-value/text-value.component.ts","ng://@knora/search/lib/extended-search/select-property/specify-property-value/uri-value/uri-value.component.ts","ng://@knora/search/lib/search.module.ts","ng://@knora/search/public_api.ts","ng://@knora/search/knora-search.ts"],"sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    animate,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\n@Component({\n    selector: 'kui-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    animations: [\n        trigger('simpleSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n        trigger('extendedSearchMenu',\n            [\n                state('inactive', style({ display: 'none' })),\n                state('active', style({ display: 'block' })),\n                transition('inactive => true', animate('100ms ease-in')),\n                transition('true => inactive', animate('100ms ease-out'))\n            ]\n        ),\n    ]\n})\n\n/**\n * Contains methods to realise, reset new or previous simple searches.\n */\nexport class SearchComponent implements OnInit {\n\n    @Input() route: string = '/search';\n\n    searchQuery: string;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n    focusOnExtended: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n    showSimpleSearch: boolean = true;\n\n    constructor(private _route: ActivatedRoute,\n        private _router: Router,\n        private _eleRef: ElementRef) {\n\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * Do search on Enter click, reset search on Escape\n     * @ignore\n     *\n     * @param search_ele\n     * @param event\n     * @returns void\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (this.searchQuery && (event.key === 'Enter' || event.keyCode === 13 || event.which === 13)) {\n            this.doSearch(search_ele);\n        }\n        if (event.key === 'Escape' || event.keyCode === 27 || event.which === 27) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n    /**\n     * Realise a simple search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    doSearch(search_ele: HTMLElement): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu('simpleSearch');\n            this._router.navigate([this.route + '/fulltext/' + this.searchQuery]);\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: string[] = JSON.parse(localStorage.getItem('prevSearch'));\n            if (existingPrevSearch === null) { existingPrevSearch = []; }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry) { existingPrevSearch.splice(i, 1); }\n                i++;\n            }\n\n            existingPrevSearch.push(this.searchQuery);\n            localStorage.setItem('prevSearch', JSON.stringify(existingPrevSearch));\n            // TODO: save the previous search queries somewhere in the user's profile\n\n        } else {\n            search_ele.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * @ignore\n     *\n     * Reset the search\n     * @param {HTMLElement} search_ele\n     * @returns void\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * @ignore\n     *\n     * Realise a previous search\n     * @param {string} query\n     * @returns void\n     */\n    doPrevSearch(query: string): void {\n        this.searchQuery = query;\n        this._router.navigate([this.route + '/fulltext/' + query], { relativeTo: this._route });\n        this.toggleMenu('simpleSearch');\n    }\n\n    /**\n     * @ignore\n     *\n     * Reset previous searches - the whole previous search or specific item by name\n     * @param {string} name term of the search\n     * @returns void\n     */\n    resetPrevSearch(name: string = null): void {\n        if (name) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(name);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n\n    }\n\n    /**\n     * @ignore\n     * Set simple focus to active\n     *\n     * @returns void\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * @ignore\n     *\n     * Switch according to the focus between simple or extended search\n     *\n     * @param {string} name 2 cases: simpleSearch or extendedSearch\n     * @returns void\n     */\n    toggleMenu(name: string): void {\n        switch (name) {\n            case 'simpleSearch':\n                this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n                this.focusOnSimple = (this.focusOnSimple === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = true;\n                break;\n            case 'extendedSearch':\n                this.focusOnExtended = (this.focusOnExtended === 'active' ? 'inactive' : 'active');\n                this.showSimpleSearch = false;\n                break;\n        }\n    }\n}\n","import { Component, Input } from '@angular/core';\nimport {\n    animate,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\n\n/**\n * The search-panel contains the kui-fulltext-search and the kui-extended-search components.\n */\n@Component({\n    selector: 'kui-search-panel',\n    templateUrl: './search-panel.component.html',\n    styleUrls: ['./search-panel.component.scss'],\n    animations: [\n        trigger('extendedSearchMenu', [\n            state('inactive', style({ display: 'none' })),\n            state('active', style({ display: 'block' })),\n            transition('inactive => active', animate('100ms ease-in')),\n            transition('active => inactive', animate('100ms ease-out'))\n        ])\n    ]\n})\nexport class SearchPanelComponent {\n    /**\n     * @param  {string} route Route to navigate after search. This route path should contain a component for search results.\n     */\n    @Input() route: string = '/search';\n\n    /**\n     *@param  {boolean} [projectfilter] If true it shows the selection of projects to filter by one of them\n     */\n    @Input() projectfilter?: boolean = false;\n\n    /**\n     * @param  {string} [filterbyproject] If your full-text search should be filtered by one project, you can define it with project iri in the parameter filterbyproject.\n     */\n    @Input() filterbyproject?: string;\n\n    showMenu: boolean = false;\n    focusOnExtended: string = 'inactive';\n\n    constructor() {}\n\n    /**\n     * Show or hide the extended search menu\n     * @ignore\n     *\n     */\n    toggleMenu(): void {\n        this.showMenu = !this.showMenu;\n        this.focusOnExtended =\n            this.focusOnExtended === 'active' ? 'inactive' : 'active';\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger\n} from '@angular/animations';\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiServiceError, Project, ProjectsService } from '@knora/core';\nimport { MatMenuTrigger } from '@angular/material';\n\nexport interface PrevSearchItem {\n    projectIri?: string;\n    projectLabel?: string;\n    query: string;\n}\n\n/**\n * Full-text search performs queries including one or more terms or phrases and returns data that\n match search conditions. The asterisk * can be used as a wildcard symbol.\n */\n@Component({\n    selector: 'kui-fulltext-search',\n    templateUrl: './fulltext-search.component.html',\n    styleUrls: ['./fulltext-search.component.scss'],\n    animations: [\n        trigger('fulltextSearchMenu', [\n            state('inactive', style({ display: 'none' })),\n            state('active', style({ display: 'block' })),\n            transition('inactive => active', animate('100ms ease-in')),\n            transition('active => inactive', animate('100ms ease-out'))\n        ])\n    ]\n})\nexport class FulltextSearchComponent implements OnInit {\n    /**\n     *\n     * @param  {string} route Route to navigate after search. This route path should contain a component for search results.\n     */\n    @Input() route: string = '/search';\n\n    /**\n     *\n     * @param  {boolean} [projectfilter] If true it shows the selection of projects to filter by one of them\n     */\n    @Input() projectfilter?: boolean = false;\n\n    /**\n     *\n     * @param  {string} [filterbyproject] If your full-text search should be filtered by one project, you can define it with project iri in the parameter filterbyproject.\n     */\n    @Input() filterbyproject?: string;\n\n    /**\n     * @ignore\n     * input field for full-text search\n     *\n     * @param  {} 'search'\n     * @param  {ElementRef} searchField\n     */\n    @ViewChild('search') searchField: ElementRef;\n\n    /**\n     * @ignore\n     * mat menu: after select a project, the focus should switch to the input field\n     *\n     * @param  {} 'btnToSelectProject'\n     * @param  {MatMenuTrigger} selectProject\n     */\n    @ViewChild('btnToSelectProject') selectProject: MatMenuTrigger;\n\n    searchQuery: string;\n\n    showSimpleSearch: boolean = true;\n\n    searchPanelFocus: boolean = false;\n\n    prevSearch: PrevSearchItem[] = JSON.parse(localStorage.getItem('prevSearch'));\n\n    focusOnSimple: string = 'inactive';\n\n    searchLabel: string = 'Search';\n\n    projects: Project[];\n    projectLabel: string = 'Filter project';\n    projectIri: string;\n\n    error: any;\n\n    constructor(\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _projectsService: ProjectsService\n    ) {}\n\n    ngOnInit() {\n        if (this.filterbyproject) {\n            this.getProject(this.filterbyproject);\n        }\n        if (this.projectfilter) {\n            this.getAllProjects();\n\n            if (localStorage.getItem('currentProject') !== null) {\n                this.setProject(\n                    JSON.parse(localStorage.getItem('currentProject'))\n                );\n            }\n        }\n    }\n\n    /**\n     * Do search on press Enter, close search menu on Escape\n     * @ignore\n     *\n     * @param search_ele\n     * @param event\n     */\n    onKey(search_ele: HTMLElement, event): void {\n        this.focusOnSimple = 'active';\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        if (\n            this.searchQuery &&\n            (event.key === 'Enter' ||\n                event.keyCode === 13 ||\n                event.which === 13)\n        ) {\n            this.doSearch();\n        }\n        if (\n            event.key === 'Escape' ||\n            event.keyCode === 27 ||\n            event.which === 27\n        ) {\n            this.resetSearch(search_ele);\n        }\n    }\n\n    /**\n     * Realise a simple search\n     * @ignore\n     *\n     */\n    doSearch(): void {\n        if (this.searchQuery !== undefined && this.searchQuery !== null) {\n            this.toggleMenu();\n\n            if (this.projectIri !== undefined) {\n                this._router.navigate([\n                    this.route +\n                        '/fulltext/' +\n                        this.searchQuery +\n                        '/' +\n                        encodeURIComponent(this.projectIri)\n                ]);\n            } else {\n                this._router.navigate([\n                    this.route + '/fulltext/' + this.searchQuery\n                ]);\n            }\n\n            // this._router.navigate(['/search/fulltext/' + this.searchQuery], { relativeTo: this._route });\n\n            // push the search query into the local storage prevSearch array (previous search)\n            // to have a list of recent search requests\n            let existingPrevSearch: PrevSearchItem[] = JSON.parse(\n                localStorage.getItem('prevSearch')\n            );\n            if (existingPrevSearch === null) {\n                existingPrevSearch = [];\n            }\n            let i: number = 0;\n            for (const entry of existingPrevSearch) {\n                // remove entry, if exists already\n                if (this.searchQuery === entry.query && this.projectIri === entry.projectIri) {\n                    existingPrevSearch.splice(i, 1);\n                }\n                i++;\n            }\n\n            // A search value is expected to have at least length of 3\n            if (this.searchQuery.length > 2) {\n                let currentQuery: PrevSearchItem = {\n                    query: this.searchQuery\n                };\n\n                if (this.projectIri) {\n                    currentQuery = {\n                        projectIri: this.projectIri,\n                        projectLabel: this.projectLabel,\n                        query: this.searchQuery\n                    };\n                }\n\n                existingPrevSearch.push(currentQuery);\n\n                localStorage.setItem(\n                    'prevSearch',\n                    JSON.stringify(existingPrevSearch)\n                );\n            }\n\n        } else {\n            // search_ele.focus();\n            this.searchField.nativeElement.focus();\n            this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        }\n    }\n\n    /**\n     * Reset the search: close the search menu; clean the input field\n     * @ignore\n     *\n     * @param {HTMLElement} search_ele\n     */\n    resetSearch(search_ele: HTMLElement): void {\n        this.searchQuery = null;\n        search_ele.focus();\n        this.focusOnSimple = 'inactive';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Switch according to the focus between simple or extended search\n     * @ignore\n     *\n     */\n    toggleMenu(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple =\n            this.focusOnSimple === 'active' ? 'inactive' : 'active';\n        this.showSimpleSearch = true;\n    }\n\n    /**\n     * Set simple focus to active\n     * @ignore\n     *\n     */\n    setFocus(): void {\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n        this.focusOnSimple = 'active';\n        this.searchPanelFocus = !this.searchPanelFocus;\n    }\n\n    /**\n     * Realise a previous search\n     * @ignore\n     *\n     * @param {string} prevSearch\n     */\n    doPrevSearch(prevSearch: PrevSearchItem): void {\n\n        this.searchQuery = prevSearch.query;\n\n        if (prevSearch.projectIri !== undefined) {\n            this.projectIri = prevSearch.projectIri;\n            this.projectLabel = prevSearch.projectLabel;\n            this._router.navigate([\n                this.route +\n                    '/fulltext/' +\n                    this.searchQuery +\n                    '/' +\n                    encodeURIComponent(prevSearch.projectIri)\n            ]);\n        } else {\n            this.projectIri = undefined;\n            this.projectLabel = 'Filter project';\n            this._router.navigate([\n                this.route + '/fulltext/' + this.searchQuery\n            ]);\n        }\n\n        this.toggleMenu();\n    }\n\n    /**\n     * Reset previous searches - the whole previous search or specific item by name\n     * @ignore\n     *\n     * @param {string} prevSearch term of the search\n     */\n    resetPrevSearch(prevSearch?: PrevSearchItem): void {\n        if (prevSearch) {\n            // delete only this item with the name ...\n            const i: number = this.prevSearch.indexOf(prevSearch);\n            this.prevSearch.splice(i, 1);\n            localStorage.setItem('prevSearch', JSON.stringify(this.prevSearch));\n        } else {\n            // delete the whole \"previous search\" array\n            localStorage.removeItem('prevSearch');\n        }\n        this.prevSearch = JSON.parse(localStorage.getItem('prevSearch'));\n    }\n\n    /**\n     * get all projects for \"filter by project\" selection\n     * @ignore\n     */\n    getAllProjects() {\n        this._projectsService.getAllProjects().subscribe(\n            (projects: Project[]) => {\n                this.projects = projects;\n                // this.loadSystem = false;\n                if (localStorage.getItem('currentProject') !== null) {\n                    this.projectLabel = JSON.parse(\n                        localStorage.getItem('currentProject')\n                    ).shortname;\n                }\n            },\n            (error: ApiServiceError) => {\n                console.error(error);\n                this.error = error;\n            }\n        );\n    }\n\n    /**\n     * get project information in case of @Input project\n     * @ignore\n     *\n     * @param {string} iri\n     */\n    getProject(iri: string) {\n        this._projectsService.getProjectByIri(iri).subscribe(\n            (project: Project) => {\n                this.setProject(project);\n            },\n            (error: ApiServiceError) => {\n                console.error(error);\n            }\n        );\n    }\n\n    /**\n     * set the project to use and store it in the local storage\n     * @ignore\n     *\n     * @param {Project} project\n     */\n    setProject(project?: Project) {\n        if (!project) {\n            // set default project: all\n            this.projectLabel = 'Filter project';\n            this.projectIri = undefined;\n            localStorage.removeItem('currentProject');\n        } else {\n            // set current project shortname and id\n            this.projectLabel = project.shortname;\n            this.projectIri = project.id;\n            localStorage.setItem('currentProject', JSON.stringify(project));\n        }\n    }\n\n    /**\n     * switch focus from select-project-menu to input field\n     * @ignore\n     */\n    changeFocus() {\n        this.selectProject.closeMenu();\n        this.searchField.nativeElement.focus();\n    }\n}\n","import { Component, EventEmitter, Inject, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ResourceClass } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-resource-class',\n    templateUrl: './select-resource-class.component.html',\n    styleUrls: ['./select-resource-class.component.scss']\n})\nexport class SelectResourceClassComponent implements OnInit, OnChanges {\n\n    @Input() formGroup: FormGroup;\n\n    // setter method for resource classes when being updated by parent component\n    @Input()\n    set resourceClasses(value: Array<ResourceClass>) {\n        this.resourceClassSelected = undefined; // reset on updates\n        this._resourceClasses = value;\n    }\n\n    // getter method for resource classes (used in template)\n    get resourceClasses() {\n        return this._resourceClasses;\n    }\n\n    // event emitted to parent component once a resource class is selected by the user\n    @Output() resourceClassSelectedEvent = new EventEmitter<string>();\n\n    // available resource classes for selection\n    private _resourceClasses: Array<ResourceClass>;\n\n    // stores the currently selected resource class\n    private resourceClassSelected: string;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Returns the Iri of the selected resource class.\n     *\n     * @returns the Iri of the selected resource class or false in case no resource class is selected.\n     */\n    getResourceClassSelected(): any {\n        if (this.resourceClassSelected !== undefined && this.resourceClassSelected !== null) {\n            return this.resourceClassSelected;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Initalizes the FormGroup for the resource class selection.\n     * The initial value is set to null.\n     */\n    private initForm() {\n        // build a form for the resource class selection\n        this.form = this.fb.group({\n            resourceClass: [null] // resource class selection is optional\n        });\n\n        // store and emit Iri of the resource class when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.resourceClassSelected = data.resourceClass;\n            this.resourceClassSelectedEvent.emit(this.resourceClassSelected);\n        });\n    }\n\n    ngOnInit() {\n\n        this.initForm();\n\n        // add form to the parent form group\n        this.formGroup.addControl('resourceClass', this.form);\n\n    }\n\n    ngOnChanges() {\n\n        if (this.form !== undefined) {\n\n            // resource classes have been reinitialized\n            // reset form\n            resolvedPromise.then(() => {\n\n                // remove this form from the parent form group\n                this.formGroup.removeControl('resourceClass');\n\n                this.initForm();\n\n                // add form to the parent form group\n                this.formGroup.addControl('resourceClass', this.form);\n\n            });\n\n        }\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {\n    GravsearchGenerationService,\n    OntologyCacheService,\n    OntologyInformation,\n    OntologyMetadata,\n    Properties,\n    PropertyWithValue,\n    ReadResourcesSequence,\n    ResourceClass\n} from '@knora/core';\nimport { SelectPropertyComponent } from './select-property/select-property.component';\nimport { SelectResourceClassComponent } from './select-resource-class/select-resource-class.component';\n\n/**\n * The extended search allows you to filter by project, by source type (resource class), or by the metadata (properties) of source types. Each filter can be standalone or combined. The metadata field can be precisely filtered with criteria such as \"contains\", \"like\", \"equals to\", \"exists\" or in case of a date value with \"before\" or \"after\". In addition, for a metadata field that is connected to another source type, it's possible to filter by this second source type. If you are looking for the source type \"Photograph\" with the metadata field \"Photographer\", which is connected to source type \"Person\", you can search for photograph(s) taken by person(s) who is born before February 1970. The result of this request will be an intersection of the two source types.\n */\n@Component({\n    selector: 'kui-extended-search',\n    templateUrl: './extended-search.component.html',\n    styleUrls: ['./extended-search.component.scss']\n})\nexport class ExtendedSearchComponent implements OnInit {\n\n    /**\n     * @param  {string} route Route to navigate after search. This route path should contain a component for search results.\n     */\n    @Input() route?;\n\n    /**\n     * @param  {boolean} toggleExtendedSearchForm Trigger toggle for extended search form.\n     */\n    @Output() toggleExtendedSearchForm = new EventEmitter<boolean>();\n\n    /**\n     * @param  {string} gravsearch Send the gravsearch query back.\n     */\n    @Output() gravsearch = new EventEmitter<string>();\n\n    // all available ontologies\n    ontologies: Array<OntologyMetadata> = [];\n\n    // ontology chosen by the user\n    activeOntology: string;\n\n    // properties specified by the user\n    activeProperties: boolean[] = [];\n\n    // resource classes for the selected ontology\n    resourceClasses: Array<ResourceClass> = [];\n\n    // definition of the selected resource class, if set.\n    activeResourceClass: ResourceClass;\n\n    // properties for the selected ontology or selected resource class\n    properties: Properties;\n\n    result: ReadResourcesSequence = new ReadResourcesSequence([], 0);\n\n    // reference to the component that controls the resource class selection\n    @ViewChild('resourceClass') resourceClassComponent: SelectResourceClassComponent;\n\n    // reference to the component controlling the property selection\n    @ViewChildren('property') propertyComponents: QueryList<SelectPropertyComponent>;\n\n    // FormGroup (used as parent for child components)\n    form: FormGroup;\n\n    // form validation status\n    formValid = false;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder,\n        private _route: ActivatedRoute,\n        private _router: Router,\n        private _cacheService: OntologyCacheService,\n        private _gravSearchService: GravsearchGenerationService) {\n    }\n\n    ngOnInit() {\n\n        // parent form is empty, it gets passed to the child components\n        this.form = this.fb.group({});\n\n        // if form status changes, re-run validation\n        this.form.statusChanges.subscribe((data) => {\n            this.formValid = this.validateForm();\n            // console.log(this.form);\n        });\n\n        // initialize ontologies to be used for the ontologies selection in the search form\n        this.initializeOntologies();\n    }\n\n    /**\n     * @ignore\n     * Add a property to the search form.\n     * @returns void\n     */\n    addProperty(): void {\n        this.activeProperties.push(true);\n    }\n\n    /**\n     * @ignore\n     * Remove the last property from the search form.\n     * @returns void\n     */\n    removeProperty(): void {\n        this.activeProperties.splice(-1, 1);\n    }\n\n    /**\n     * @ignore\n     * Gets all available ontologies for the search form.\n     * @returns void\n     */\n    initializeOntologies(): void {\n        this._cacheService.getOntologiesMetadata().subscribe(\n            (ontologies: Array<OntologyMetadata>) => {\n                this.ontologies = ontologies;\n            });\n    }\n\n    /**\n     * @ignore\n     * Once an ontology has been selected, gets its classes and properties.\n     * The classes and properties will be made available to the user for selection.\n     *\n     * @param ontologyIri Iri of the ontology chosen by the user.\n     * @returns void\n     */\n    getResourceClassesAndPropertiesForOntology(ontologyIri: string): void {\n\n        // reset active resource class definition\n        this.activeResourceClass = undefined;\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        this.activeOntology = ontologyIri;\n\n        this._cacheService.getEntityDefinitionsForOntologies([ontologyIri]).subscribe(\n            (ontoInfo: OntologyInformation) => {\n\n                this.resourceClasses = ontoInfo.getResourceClassesAsArray(true);\n                this.properties = ontoInfo.getProperties();\n\n            }\n        );\n\n    }\n\n    /**\n     * @ignore\n     * Once a resource class has been selected, gets its properties.\n     * The properties will be made available to the user for selection.\n     *\n     * @param resourceClassIri\n     * @returns void\n     */\n    getPropertiesForResourceClass(resourceClassIri: string): void {\n\n        // reset specified properties\n        this.activeProperties = [];\n\n        // if the client undoes the selection of a resource class, use the active ontology as a fallback\n        if (resourceClassIri === null) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        } else {\n\n            this._cacheService.getResourceClassDefinitions([resourceClassIri]).subscribe(\n                (ontoInfo: OntologyInformation) => {\n                    this.properties = ontoInfo.getProperties();\n\n                    this.activeResourceClass = ontoInfo.getResourceClasses()[resourceClassIri];\n\n                }\n            );\n\n        }\n\n    }\n\n    /**\n     * @ignore\n     * Validates form and returns its status (boolean).\n     */\n    private validateForm() {\n\n        // check that either a resource class is selected or at least one property is specified\n        return this.form.valid &&\n            (this.propertyComponents.length > 0 || (this.resourceClassComponent !== undefined && this.resourceClassComponent.getResourceClassSelected() !== false));\n\n    }\n\n    /**\n     * @ignore\n     * Resets the form (selected resource class and specified properties) preserving the active ontology.\n     */\n    resetForm() {\n        if (this.activeOntology !== undefined) {\n            this.getResourceClassesAndPropertiesForOntology(this.activeOntology);\n        }\n    }\n\n\n    /**\n     * @ignore\n     * Creates a GravSearch query with the given form values and calls the extended search route.\n     */\n    submit() {\n\n        if (!this.formValid) return; // check that from is valid\n\n        const resClassOption = this.resourceClassComponent.getResourceClassSelected();\n\n        let resClass;\n\n        if (resClassOption !== false) {\n            resClass = resClassOption;\n        }\n\n        const properties: PropertyWithValue[] = this.propertyComponents.map(\n            (propComp) => {\n                return propComp.getPropertySelectedWithValue();\n            }\n        );\n\n        const gravsearch = this._gravSearchService.createGravsearchQuery(properties, resClass, 0);\n\n        if (this.route) {\n            this._router.navigate([this.route + '/extended/', gravsearch], { relativeTo: this._route });\n        } else {\n            this.gravsearch.emit(gravsearch);\n        }\n\n\n        // toggle extended search form\n        this.toggleExtendedSearchForm.emit(true);\n\n    }\n\n}\n","import { Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\nimport { OntologyMetadata } from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'kui-select-ontology',\n  templateUrl: './select-ontology.component.html',\n  styleUrls: ['./select-ontology.component.scss']\n})\nexport class SelectOntologyComponent implements OnInit {\n\n  @Input() formGroup: FormGroup;\n\n  @Input() ontologies: Array<OntologyMetadata>;\n\n  @Output() ontologySelected = new EventEmitter<string>();\n\n  form: FormGroup;\n\n  constructor(@Inject(FormBuilder) private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    // build a form for the named graph selection\n    this.form = this.fb.group({\n      ontology: [null, Validators.required]\n    });\n\n    // emit Iri of the ontology when being selected\n    this.form.valueChanges.subscribe((data) => {\n      this.ontologySelected.emit(data.ontology);\n    });\n\n    // add form to the parent form group\n    this.formGroup.addControl('ontology', this.form);\n\n  }\n\n}\n","import { Component, Inject, Input, OnChanges, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n    ComparisonOperator,\n    ComparisonOperatorAndValue,\n    Equals,\n    Exists,\n    GreaterThan,\n    GreaterThanEquals,\n    KnoraConstants,\n    LessThan,\n    LessThanEquals,\n    Like,\n    Match,\n    NotEquals,\n    Property,\n    PropertyValue,\n    Value\n} from '@knora/core';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-specify-property-value',\n    templateUrl: './specify-property-value.component.html',\n    styleUrls: ['./specify-property-value.component.scss']\n})\nexport class SpecifyPropertyValueComponent implements OnInit, OnChanges {\n\n    KnoraConstants = KnoraConstants;\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    @ViewChild('propertyValue') propertyValueComponent: PropertyValue;\n\n    // setter method for the property chosen by the user\n    @Input()\n    set property(prop: Property) {\n        this.comparisonOperatorSelected = undefined; // reset to initial state\n        this._property = prop;\n        this.resetComparisonOperators(); // reset comparison operators for given property (overwriting any previous selection)\n    }\n\n    // getter method for this._property\n    get property(): Property {\n        return this._property;\n    }\n\n    private _property: Property;\n\n    form: FormGroup;\n\n    // available comparison operators for the property\n    comparisonOperators: Array<ComparisonOperator> = [];\n\n    // comparison operator selected by the user\n    comparisonOperatorSelected: ComparisonOperator;\n\n    // the type of the property\n    propertyValueType;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    /**\n     * Resets the comparison operators for this._property.\n     */\n    resetComparisonOperators() {\n\n        // depending on object class, set comparison operators and value entry field\n        if (this._property.isLinkProperty) {\n            this.propertyValueType = KnoraConstants.Resource;\n        } else {\n            this.propertyValueType = this._property.objectType;\n        }\n\n        switch (this.propertyValueType) {\n\n            case KnoraConstants.TextValue:\n                this.comparisonOperators = [new Like(), new Match(), new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.BooleanValue:\n            case KnoraConstants.Resource:\n            case KnoraConstants.UriValue:\n            case KnoraConstants.IntervalValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.IntValue:\n            case KnoraConstants.DecimalValue:\n            case KnoraConstants.DateValue:\n                this.comparisonOperators = [new Equals(), new NotEquals(), new LessThan(), new LessThanEquals(), new GreaterThan(), new GreaterThanEquals(), new Exists()];\n                break;\n\n            case KnoraConstants.ListValue:\n            case KnoraConstants.GeomValue:\n            case KnoraConstants.FileValue:\n            case KnoraConstants.AudioFileValue:\n            case KnoraConstants.StillImageFileValue:\n            case KnoraConstants.DDDFileValue:\n            case KnoraConstants.MovingImageFileValue:\n            case KnoraConstants.TextFileValue:\n            case KnoraConstants.ColorValue:\n                this.comparisonOperators = [new Exists()];\n                break;\n\n            default:\n                console.log('ERROR: Unsupported value type ' + this._property.objectType);\n\n        }\n\n    }\n\n    ngOnInit() { }\n\n    ngOnChanges() {\n\n        // build a form for comparison operator selection\n        this.form = this.fb.group({\n            comparisonOperator: [null, Validators.required]\n        });\n\n        // store comparison operator when selected\n        this.form.valueChanges.subscribe((data) => {\n            this.comparisonOperatorSelected = data.comparisonOperator;\n        });\n\n        resolvedPromise.then(() => {\n\n            // remove from the parent form group (clean reset)\n            this.formGroup.removeControl('comparisonOperator');\n\n            // add form to the parent form group\n            this.formGroup.addControl('comparisonOperator', this.form);\n        });\n\n    }\n\n    /**\n     * Gets the specified comparison operator and value for the property.\n     *\n     * returns {ComparisonOperatorAndValue} the comparison operator and the specified value\n     */\n    getComparisonOperatorAndValueLiteralForProperty(): ComparisonOperatorAndValue {\n        // return value (literal or IRI) from the child component\n        let value: Value;\n\n        // comparison operator 'Exists' does not require a value\n        if (this.comparisonOperatorSelected.getClassName() !== 'Exists') {\n            value = this.propertyValueComponent.getValue();\n        }\n\n        // return the comparison operator and the specified value\n        return new ComparisonOperatorAndValue(this.comparisonOperatorSelected, value);\n\n    }\n\n}\n\n","import { Component, Inject, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n    Cardinality,\n    CardinalityOccurrence,\n    ComparisonOperatorAndValue,\n    Properties,\n    Property,\n    PropertyWithValue,\n    ResourceClass\n} from '@knora/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SpecifyPropertyValueComponent } from './specify-property-value/specify-property-value.component';\nimport { OntologyInformation } from '@knora/core';\n\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'kui-select-property',\n    templateUrl: './select-property.component.html',\n    styleUrls: ['./select-property.component.scss']\n})\nexport class SelectPropertyComponent implements OnInit, OnDestroy {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    // index of the given property (unique)\n    @Input() index: number;\n\n    // setter method for properties when being updated by parent component\n    @Input()\n    set properties(value: Properties) {\n        this.propertySelected = undefined; // reset selected property (overwriting any previous selection)\n        this._properties = value;\n        this.updatePropertiesArray();\n    }\n\n    get properties() {\n       return this._properties;\n    }\n\n    _activeResourceClass: ResourceClass;\n\n    // setter method for selected resource class\n    @Input()\n    set activeResourceClass(value: ResourceClass) {\n        this._activeResourceClass = value;\n    }\n\n    // reference to child component: combination of comparison operator and value for chosen property\n    @ViewChild('specifyPropertyValue') specifyPropertyValue: SpecifyPropertyValueComponent;\n\n    // properties that can be selected from\n    private _properties: Properties;\n\n    // properties as an Array structure (based on this.properties)\n    propertiesAsArray: Array<Property>;\n\n    // represents the currently selected property\n    propertySelected: Property;\n\n    form: FormGroup;\n\n    // unique name for this property to be used in the parent FormGroup\n    propIndex: string;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        // build a form for the property selection\n        this.form = this.fb.group({\n            property: [null, Validators.required],\n            isSortCriterion: [false, Validators.required]\n        });\n\n        // update the selected property\n        this.form.valueChanges.subscribe((data) => {\n            const propIri = data.property;\n            this.propertySelected = this._properties[propIri];\n        });\n\n        resolvedPromise.then(() => {\n            this.propIndex = 'property' + this.index;\n\n            // add form to the parent form group\n            this.formGroup.addControl(this.propIndex, this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl(this.propIndex);\n        });\n    }\n\n    /**\n     * Indicates if property can be used as a sort criterion.\n     * Property has to have cardinality or max cardinality 1 for the chosen resource class.\n     *\n     * We cannot sort by properties whose cardinality is greater than 1.\n     * Return boolean\n     */\n    sortCriterion() {\n\n        // check if a resource class is selected and if the property's cardinality is 1 for the selected resource class\n        if (this._activeResourceClass !== undefined && this.propertySelected !== undefined && !this.propertySelected.isLinkProperty) {\n\n            const cardinalities: Cardinality[] = this._activeResourceClass.cardinalities.filter(\n                (card: Cardinality) => {\n                    // cardinality 1 or max occurrence 1\n                    return card.property === this.propertySelected.id\n                        && card.value === 1\n                        && (card.occurrence === CardinalityOccurrence.card || card.occurrence === CardinalityOccurrence.maxCard);\n\n                }\n            );\n\n            return cardinalities.length === 1;\n        } else {\n            return false;\n        }\n\n    }\n\n    /**\n     * Updates the properties array that is accessed by the template.\n     */\n    private updatePropertiesArray() {\n\n        // represent the properties as an array to be accessed by the template\n        const propsArray = [];\n\n        for (const propIri in this._properties) {\n            if (this._properties.hasOwnProperty(propIri)) {\n                const prop = this._properties[propIri];\n\n                // only list editable props that are not link value props\n                if (prop.isEditable && !prop.isLinkValueProperty) {\n                    propsArray.push(this._properties[propIri]);\n                }\n            }\n        }\n\n        // sort properties by label (ascending)\n        propsArray.sort(OntologyInformation.sortFunc);\n\n        this.propertiesAsArray = propsArray;\n    }\n\n    /**\n     * Returns the selected property with the specified value.\n     */\n    getPropertySelectedWithValue(): PropertyWithValue {\n\n        const propVal: ComparisonOperatorAndValue = this.specifyPropertyValue.getComparisonOperatorAndValueLiteralForProperty();\n\n        let isSortCriterion = false;\n\n        // only non linking properties can be used for sorting\n        if (!this.propertySelected.isLinkProperty) {\n            isSortCriterion = this.form.value.isSortCriterion;\n        }\n\n        return new PropertyWithValue(this.propertySelected, propVal, isSortCriterion);\n\n    }\n\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n\n@Component({\n    selector: 'boolean-value',\n    templateUrl: './boolean-value.component.html',\n    styleUrls: ['./boolean-value.component.scss']\n})\nexport class BooleanValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.BooleanValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            booleanValue: [false, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n        return new ValueLiteral(String(this.form.value.booleanValue), KnoraConstants.xsdBoolean);\n    }\n}\n","import { Component, Directive, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { DateAdapter, MAT_DATE_LOCALE, MatCalendar, MatDatepickerContent } from '@angular/material';\nimport { JDNConvertibleCalendarDateAdapter } from 'jdnconvertiblecalendardateadapter';\n\n/** Custom header component containing a calendar format switcher */\n@Component({\n    selector: 'kui-calendar-header',\n    template: `\n      <mat-select placeholder=\"Calendar Format\" [formControl]=\"form.controls['calendar']\">\n        <mat-option *ngFor=\"let cal of supportedCalendarFormats\" [value]=\"cal\">{{cal}}</mat-option>\n      </mat-select>\n      <mat-calendar-header></mat-calendar-header>\n    `,\n    styleUrls: []\n})\nexport class HeaderComponent<D> implements OnInit {\n    constructor(@Host() private _calendar: MatCalendar<JDNConvertibleCalendar>,\n        private _dateAdapter: DateAdapter<JDNConvertibleCalendar>,\n        private _datepickerContent: MatDatepickerContent<JDNConvertibleCalendar>,\n        @Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    form: FormGroup;\n\n    // a list of supported calendar formats (Gregorian and Julian)\n    supportedCalendarFormats = JDNConvertibleCalendar.supportedCalendars;\n\n    // the currently active calendar format\n    activeFormat;\n\n    ngOnInit() {\n\n        // get the currently active calendar format from the date adapter\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n            this.activeFormat = this._dateAdapter.activeCalendarFormat;\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n\n        // build a form for the calendar format selection\n        this.form = this.fb.group({\n            calendar: [this.activeFormat, Validators.required]\n        });\n\n        // do the conversion when the user selects another calendar format\n        this.form.valueChanges.subscribe((data) => {\n            // pass the target calendar format to the conversion method\n            this.convertDate(data.calendar);\n        });\n\n    }\n\n    /**\n     * Converts the date into the target format.\n     *\n     * @param calendar the target calendar format.\n     */\n    convertDate(calendar: 'Gregorian' | 'Julian') {\n\n        if (this._dateAdapter instanceof JDNConvertibleCalendarDateAdapter) {\n\n            // convert the date into the target calendar format\n            const convertedDate = this._dateAdapter.convertCalendarFormat(this._calendar.activeDate, calendar);\n\n            // set the new date\n            this._calendar.activeDate = convertedDate;\n\n            // select the new date in the datepicker UI\n            this._datepickerContent.datepicker.select(convertedDate);\n\n            // update view after calendar format conversion\n            this._calendar.updateTodaysDate();\n        } else {\n            console.log('date adapter is expected to be an instance of JDNConvertibleCalendarDateAdapter');\n        }\n    }\n}\n","import { Component, Host, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\nimport { GregorianCalendarDate, JDNConvertibleCalendar, JDNPeriod } from 'jdnconvertiblecalendar';\nimport { HeaderComponent } from './header-calendar/header-calendar.component';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'date-value',\n    templateUrl: './date-value.component.html',\n    styleUrls: ['./date-value.component.scss']\n})\nexport class DateValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DateValue;\n\n    form: FormGroup;\n\n    // custom header for the datepicker\n    headerComponent = HeaderComponent;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        // init datepicker\n        this.form = this.fb.group({\n            dateValue: [null, Validators.compose([Validators.required])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            // console.log(data.dateValue);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        const dateObj: JDNConvertibleCalendar = this.form.value.dateValue;\n\n        // get calendar format\n        const calendarFormat = dateObj.calendarName;\n        // get calendar period\n        const calendarPeriod = dateObj.toCalendarPeriod();\n        // get the date\n        const dateString = `${calendarFormat.toUpperCase()}:${calendarPeriod.periodStart.year}-${calendarPeriod.periodStart.month}-${calendarPeriod.periodStart.day}:${calendarPeriod.periodEnd.year}-${calendarPeriod.periodEnd.month}-${calendarPeriod.periodEnd.day}`;\n\n        return new ValueLiteral(String(dateString), KnoraConstants.DateValue);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'decimal-value',\n    templateUrl: './decimal-value.component.html',\n    styleUrls: ['./decimal-value.component.scss']\n})\nexport class DecimalValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.DecimalValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            decimalValue: [null, Validators.compose([Validators.required])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.decimalValue), KnoraConstants.xsdDecimal);\n    }\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'integer-value',\n    templateUrl: './integer-value.component.html',\n    styleUrls: ['./integer-value.component.scss']\n})\nexport class IntegerValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.IntValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            integerValue: [null, Validators.compose([Validators.required, Validators.pattern(/^-?\\d+$/)])] // only allow for integer values (no fractions)\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.integerValue), KnoraConstants.xsdInteger);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    ApiServiceResult,\n    ConvertJSONLD,\n    IRI,\n    KnoraConstants,\n    OntologyCacheService,\n    PropertyValue,\n    ReadResource,\n    ReadResourcesSequence,\n    SearchService,\n    Value\n} from '@knora/core';\n\ndeclare let require: any; // http://stackoverflow.com/questions/34730010/angular2-5-minute-install-bug-require-is-not-defined\nconst jsonld = require('jsonld');\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'link-value',\n    templateUrl: './link-value.component.html',\n    styleUrls: ['./link-value.component.scss']\n})\nexport class LinkValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.LinkValue;\n\n    form: FormGroup;\n\n    resources: ReadResource[];\n\n    private _restrictToResourceClass: string;\n\n    @Input()\n    set restrictResourceClass(value: string) {\n        this._restrictToResourceClass = value;\n    }\n\n    get restrictResourceClass() {\n        return this._restrictToResourceClass;\n    }\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder, private _searchService: SearchService, private _cacheService: OntologyCacheService) {\n\n    }\n\n    /**\n     * Displays a selected resource using its label.\n     *\n     * @param resource the resource to be displayed (or no selection yet).\n     * @returns\n     */\n    displayResource(resource: ReadResource | null) {\n\n        // null is the initial value (no selection yet)\n        if (resource !== null) {\n            return resource.label;\n        }\n    }\n\n    /**\n     * Search for resources whose labels contain the given search term, restricting to to the given properties object constraint.\n     *\n     * @param searchTerm\n     */\n    searchByLabel(searchTerm: string) {\n\n        // at least 3 characters are required\n        if (searchTerm.length >= 3) {\n\n            this._searchService.searchByLabelReadResourceSequence(searchTerm, this._restrictToResourceClass).subscribe(\n                (result: ReadResourcesSequence) => {\n                    this.resources = result.resources;\n                }, function (err) {\n                    console.log('JSONLD of full resource request could not be expanded:' + err);\n                }\n            );\n        } else {\n            // clear selection\n            this.resources = undefined;\n        }\n\n    }\n\n    /**\n     * Checks that the selection is a [[ReadResource]].\n     *\n     * Surprisingly, [null] has to be returned if the value is valid: https://angular.io/guide/form-validation#custom-validators\n     *\n     * @param the form element whose value has to be checked.\n     * @returns\n     */\n    validateResource(c: FormControl) {\n\n        const isValidResource = (c.value instanceof ReadResource);\n\n        if (isValidResource) {\n            return null;\n        } else {\n            return {\n                noResource: {\n                    value: c.value\n                }\n            };\n        }\n\n    }\n\n    ngOnInit() {\n        this.form = this.fb.group({\n            resource: [null, Validators.compose([\n                Validators.required,\n                this.validateResource\n            ])]\n        });\n\n        this.form.valueChanges.subscribe((data) => {\n            this.searchByLabel(data.resource);\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new IRI(this.form.value.resource.id);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'text-value',\n    templateUrl: './text-value.component.html',\n    styleUrls: ['./text-value.component.scss']\n})\nexport class TextValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.TextValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            textValue: [null, Validators.required]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.textValue), KnoraConstants.xsdString);\n    }\n\n}\n","import { Component, Inject, Input, OnDestroy, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { KnoraConstants, PropertyValue, Utils, Value, ValueLiteral } from '@knora/core';\n\n// https://stackoverflow.com/questions/45661010/dynamic-nested-reactive-form-expressionchangedafterithasbeencheckederror\nconst resolvedPromise = Promise.resolve(null);\n\n@Component({\n    selector: 'uri-value',\n    templateUrl: './uri-value.component.html',\n    styleUrls: ['./uri-value.component.scss']\n})\nexport class UriValueComponent implements OnInit, OnDestroy, PropertyValue {\n\n    // parent FormGroup\n    @Input() formGroup: FormGroup;\n\n    type = KnoraConstants.UriValue;\n\n    form: FormGroup;\n\n    constructor(@Inject(FormBuilder) private fb: FormBuilder) {\n\n    }\n\n    ngOnInit() {\n\n        this.form = this.fb.group({\n            uriValue: [null, Validators.compose([Validators.required, Validators.pattern(Utils.RegexUrl)])]\n        });\n\n        resolvedPromise.then(() => {\n            // add form to the parent form group\n            this.formGroup.addControl('propValue', this.form);\n        });\n\n    }\n\n    ngOnDestroy() {\n\n        // remove form from the parent form group\n        resolvedPromise.then(() => {\n            this.formGroup.removeControl('propValue');\n        });\n\n    }\n\n    getValue(): Value {\n\n        return new ValueLiteral(String(this.form.value.uriValue), KnoraConstants.xsdUri);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatIconModule, MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatTooltipModule\n} from '@angular/material';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { KuiCoreModule } from '@knora/core';\nimport { KuiActionModule } from '@knora/action';\nimport { KuiViewerModule } from '@knora/viewer';\n\nimport { MatJDNConvertibleCalendarDateAdapterModule } from 'jdnconvertiblecalendardateadapter';\n\nimport { SearchComponent } from './search.component';\nimport { FulltextSearchComponent } from './fulltext-search/fulltext-search.component';\nimport { SearchPanelComponent } from './search-panel/search-panel.component';\nimport { ExtendedSearchComponent } from './extended-search/extended-search.component';\n\nimport { SelectOntologyComponent } from './extended-search/select-ontology/select-ontology.component';\nimport { SelectResourceClassComponent } from './extended-search/select-resource-class/select-resource-class.component';\nimport { SelectPropertyComponent } from './extended-search/select-property/select-property.component';\nimport { SpecifyPropertyValueComponent } from './extended-search/select-property/specify-property-value/specify-property-value.component';\nimport { BooleanValueComponent } from './extended-search/select-property/specify-property-value/boolean-value/boolean-value.component';\nimport { DateValueComponent } from './extended-search/select-property/specify-property-value/date-value/date-value.component';\nimport { DecimalValueComponent } from './extended-search/select-property/specify-property-value/decimal-value/decimal-value.component';\nimport { IntegerValueComponent } from './extended-search/select-property/specify-property-value/integer-value/integer-value.component';\nimport { LinkValueComponent } from './extended-search/select-property/specify-property-value/link-value/link-value.component';\nimport { TextValueComponent } from './extended-search/select-property/specify-property-value/text-value/text-value.component';\nimport { UriValueComponent } from './extended-search/select-property/specify-property-value/uri-value/uri-value.component';\nimport { HeaderComponent } from './extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatSelectModule,\n        MatTooltipModule,\n        FormsModule,\n        ReactiveFormsModule,\n        KuiCoreModule,\n        KuiActionModule,\n        KuiViewerModule,\n        MatJDNConvertibleCalendarDateAdapterModule\n    ],\n    declarations: [\n        SearchComponent,\n        SelectOntologyComponent,\n        ExtendedSearchComponent,\n        SelectResourceClassComponent,\n        SelectPropertyComponent,\n        SpecifyPropertyValueComponent,\n        BooleanValueComponent,\n        DateValueComponent,\n        DecimalValueComponent,\n        IntegerValueComponent,\n        LinkValueComponent,\n        TextValueComponent,\n        UriValueComponent,\n        HeaderComponent,\n        FulltextSearchComponent,\n        SearchPanelComponent\n    ],\n    exports: [\n        SearchComponent,\n        SearchPanelComponent,\n        FulltextSearchComponent,\n        ExtendedSearchComponent,\n        DateValueComponent\n    ],\n    entryComponents: [\n        HeaderComponent\n    ]\n})\nexport class KuiSearchModule {\n}\n","/*\n * Public API Surface of search\n */\n\nexport * from './lib/search.component';\nexport * from './lib/search-panel/search-panel.component';\nexport * from './lib/fulltext-search/fulltext-search.component';\n\nexport * from './lib/extended-search/extended-search.component';\nexport * from './lib/extended-search/select-ontology/select-ontology.component';\nexport * from './lib/extended-search/select-property/select-property.component';\nexport * from './lib/extended-search/select-property/specify-property-value/specify-property-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/boolean-value/boolean-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/date-value/date-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/date-value/header-calendar/header-calendar.component';\nexport * from './lib/extended-search/select-property/specify-property-value/decimal-value/decimal-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/integer-value/integer-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/link-value/link-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/text-value/text-value.component';\nexport * from './lib/extended-search/select-property/specify-property-value/uri-value/uri-value.component';\nexport * from './lib/extended-search/select-resource-class/select-resource-class.component';\n\nexport * from './lib/search.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__values","resolvedPromise"],"mappings":"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"}
